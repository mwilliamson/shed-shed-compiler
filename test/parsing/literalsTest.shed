module shed.compiler.parsing.literalsTest;

members {
    testCases
}

import hat.TestCase;

import shed.compiler.nodes;
import shed.compiler.nodes.Node;
import shed.compiler.parsing.literals.literalRule;
import shed.compiler.parsing.testing.createAssertSuccessfulParse;

val testCases = listOf[TestCase](
    TestCase("can parse unit", fun() =>
        assertSuccessfulParse("()", nodes.unit())
    ),
    
    TestCase("can parse number literal", fun() =>
        assertSuccessfulParse("42", nodes.number("42"))
    ),
    
    TestCase("can parse true literal", fun() =>
        assertSuccessfulParse("true", nodes.boolean(true))
    ),
    
    TestCase("can parse false literal", fun() =>
        assertSuccessfulParse("false", nodes.boolean(false))
    ),
    
    TestCase("can parse string literal", fun() =>
        assertSuccessfulParse("\"blah\"", nodes.string("blah"))
    )
);

val assertSuccessfulParse = createAssertSuccessfulParse(literalRule);
