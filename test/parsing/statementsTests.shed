module shed.compiler.parsing.statementsTest;

members {
    testCases
}

import hat.TestCase;

import lop.rules;

import shed.compiler.nodes;
import shed.compiler.nodes.Node;
import shed.compiler.parsing.statements.statementRule;
import shed.compiler.parsing.testing.createAssertSuccessfulParse;
import shed.compiler.parsing.tokenRules;

val testCases = listOf(
    TestCase("can parse expression statement", fun() =>
        assertSuccessfulParse(
            "hello;",
            nodes.expressionStatement(nodes.ref("hello"))
        )
    )
);

val stubExpression = rules.map(tokenRules.identifier(), nodes.ref);

val assertSuccessfulParse = createAssertSuccessfulParse(statementRule(stubExpression));
