module shed/compiler/resultMatchers;

members {
    isSuccess
}

import duck.MatchResult;

def isSuccess fun[T] => (matcher: Matcher[T]) => object {
    members {
        describeSelf,
        matches,
        describeMismatch,
        matchesWithDescription
    }
    
    def describeSelf fun() => "success with value ".concat(matcher.describeSelf());
    
    def matches fun(result: ParseResult) =>
        matchesWithDescription(result).matches();
    
    def describeMismatch fun(result: ParseResult) =>
        matchesWithDescription(result).mismatchDescription();
        
    def matchesWithDescription fun(result: Result) =>
        if result.isSuccess() then
            if not(matcher.matches(result.value())) then
                MatchResult(false, "value didn't match: ".concat(matcher.describeMismatch(result.value())))
            else
                MatchResult(true, "")
        else
            MatchResult(false, "was not success, was ".concat(represent(result)))
}
