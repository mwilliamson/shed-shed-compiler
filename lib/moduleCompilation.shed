module shed.compiler.moduleCompilation;

members {
    compileSourceToString
}

import strings;

import lop.strings.createStringSource;

import shed.compiler.parsing.parser.Parser;
import shed.compiler.codeGeneration.microJavaScript;
import shed.compiler.javaScript.writing;

val parser = Parser();

def compileSourceToString fun(source: StringSource) => do {
    val parseResult = parser.parseModule(source);
    return if parseResult.isSuccess() then do {
        val shedNode = parseResult.value();
        val javaScriptNode = microJavaScript.generate(shedNode);
        return writing.write(javaScriptNode);
    } else do {
        print("Parse failed:\n");
        print("source:");
        print(source.description());
        print("\n");
        print(represent(parseResult));
        print("\n");
    };
}
    
