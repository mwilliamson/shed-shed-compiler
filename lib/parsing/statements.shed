module shed.compiler.parsing.statements;

members {
    statementRule
}

import lop.rules;

import shed.compiler.nodes;

def statementRule fun(expressionRule: Rule[ExpressionNode]) => do {
    val expressionStatementRule =
        rules.sequence()
            .capture(expressionRule)
            .next(rules.token("symbol", ";"))
            .map(nodes.expressionStatement);

    return rules.firstOf("statement",
        listOf(
            expressionStatementRule
        )
    );
}
