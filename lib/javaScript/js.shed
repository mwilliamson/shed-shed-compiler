module shed.compiler.javaScript.js;

members {
    string StringNode,
    StringNode,
    ref VariableReferenceNode,
    variableReference VariableReferenceNode,
    VariableReferenceNode,
    call CallNode,
    CallNode,
    expressionStatement ExpressionStatementNode,
    ExpressionStatementNode,
    statements StatementsNode,
    StatementsNode
}

import structs;

def StringNode class(value: String) => {
    members {
        value fun() => value,
        struct fun() => structs.create(StringNode, listOf(value))
    }
}

def VariableReferenceNode class(identifier: String) => {
    members {
        identifier fun() => identifier,
        struct fun() => structs.create(VariableReferenceNode, listOf(identifier))
    }
}

def CallNode class(callee: ExpressionNode, args: List[ExpressionNode]) => {
    members {
        callee fun() => callee,
        args fun() => args,
        struct fun() => structs.create(CallNode, listOf(callee, args))
    }
}

def ExpressionStatementNode class(expression: ExpressionNode) => {
    members {
        expression fun() => expression,
        struct fun() => structs.create(ExpressionStatementNode, listOf(expression))
    }
}

def StatementsNode class(statements: List[StatementNode]) => {
    members {
        statements fun() => statements,
        struct fun() => structs.create(StatementsNode, listOf(statements))
    }
}
