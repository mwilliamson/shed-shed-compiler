module shed.compiler.compilation;

members {
    compileString,
    compileFile
}

import files;

import lop.strings.createStringSource;

import shed.compiler.moduleCompilation;

def compileString fun(input: String) => do {
    val source = createStringSource(input, "raw string");
    return "var $shed = {string: function(value) { return {$value: value}; } };"
        .concat("var print = function(value) { process.stdout.write(value.$value); };")
        .concat(moduleCompilation.compileToString(listOf(source)));
    }

def compileFile fun(argv: List[String]) => do {
    val filePath = argv.head();
    files.readFile(filePath, "utf8").map(fun(source: String) =>
        print(compileString(source))
    );
}
